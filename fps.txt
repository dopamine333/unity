
using UnityEngine;


[RequireComponent(typeof(PlayerMotor))]
public class PlayerController : MonoBehaviour
{
    [SerializeField]
    private float speed = 5f;
    [SerializeField]
    private float lookSensitivity =3f;

    private PlayerMotor motor;

    // Start is called before the first frame update
    void Start()
    {
        motor=GetComponent<PlayerMotor>();


    }

    // Update is called once per frame
    void Update()
    {
        float _xMov=Input.GetAxisRaw("Horizontal");
        float _zMov=Input.GetAxisRaw("Vertical");

        Vector3 _movHor = transform.right*_xMov;
        Vector3 _movVer = transform.forward*_zMov;

        Vector3 _velocity = (_movHor+_movVer).normalized*speed;

        motor.Move(_velocity);

        float _xRot=Input.GetAxisRaw("Mouse Y");

        Vector3 _camRot=new Vector3(_xRot,0f,0f)*lookSensitivity;

        motor.RotateCamera(_camRot);

        float _yRot=Input.GetAxisRaw("Mouse X");

        Vector3 _Rot=new Vector3(0f,_yRot,0f)*lookSensitivity;

        motor.Rotate(_Rot);
    }
}




using UnityEngine;


[RequireComponent(typeof(Rigidbody))]
public class PlayerMotor : MonoBehaviour
{
    [SerializeField]
    private Camera cam;
    private Vector3 velocity = Vector3.zero;
    private Vector3 rotation = Vector3.zero;
    private Vector3 cameraRotation = Vector3.zero;
    private Rigidbody rb;

    void Start()
    {
        rb=GetComponent<Rigidbody>();
    }

    public void Move(Vector3 _vel)
    {
        velocity=_vel;
    }
     public void Rotate(Vector3 _rot)
    {
        rotation=_rot;
    }
     public void RotateCamera(Vector3 _camRot)
    {
       cameraRotation=_camRot;
    }


    void FixedUpdate ()
    {
        PerformMovement();
        PerformPotation();

    }

    void  PerformMovement()
    {
        if(velocity != Vector3.zero)
        {
            rb.MovePosition(rb.position + velocity * Time.fixedDeltaTime);
        }
        
    } 
    void  PerformPotation()
    {
        rb.MoveRotation(rb.rotation * Quaternion.Euler(rotation));
        if(cam != null)
        {
            cam.transform.Rotate(-cameraRotation);
        }
    } 

}

